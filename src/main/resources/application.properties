# AWS-DB:
#spring.datasource.url=jdbc:postgresql://dummyDatabase:5432/dummy_db
#spring.datasource.password= dummy_password

#LOCAL-HOST-DB:
spring.datasource.url=jdbc:postgresql://localhost:5432/si_project_db
spring.datasource.password= password

spring.datasource.username= postgres



#spring.aws.secretsmanager.secretName=prod/siProject/db
#spring.aws.secretsmanager.endpoint=database-1-kann-weg.c64kfdsqkuqg.us-east-1.rds.amazonaws.com
#spring.aws.secretsmanager.region=us-east-1
#si-anamnesis-service.cmqlg5eb9qzh.us-east-1.rds.amazonaws.com:5432
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = create
spring.jpa.show-sql = true
spring.jpa.generate-ddl = true

#... to create oauth security tables ...#
#spring.datasource.initialize=false
spring.datasource.initialization-mode=always

spring.hateoas.use-hal-as-default-json-media-type= false

si.init-data=true
si.authorization-username=admin
si.authorization-resource-id=oauth2-resource
si.authorization-secret=admin
si.access-token-validity=20000
